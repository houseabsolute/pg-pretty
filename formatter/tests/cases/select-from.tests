++++
comma-separated from list
----
SELECT * FROM x, y, z
----
SELECT *
  FROM x, y, z
----

++++
simple
----
SELECT x FROM y
----
SELECT x
  FROM y
----

++++
SELECT *
----
SELECT * FROM y
----
SELECT *
  FROM y
----

++++
comma-separated from list
----
SELECT * FROM x, y
----
SELECT *
  FROM x, y
----

++++
natural join
----
SELECT * FROM x NATURAL JOIN y
----
SELECT *
  FROM x NATURAL JOIN y
----

++++
2 tables on
----
SELECT x FROM y JOIN z ON y.foo = z.foo
----
SELECT x
  FROM y
       JOIN z ON y.foo = z.foo
----

++++
2 tables using
----
SELECT x FROM y
          JOIN z
USING (foo)
----
SELECT x
  FROM y JOIN z USING (foo)
----

++++
2 tables using 2 cols
----
SELECT x FROM y
          JOIN z
USING (foo, bar)
----
SELECT x
  FROM y JOIN z USING ( foo, bar )
----

++++
4 tables
----
SELECT a, b, c
FROM t1
JOIN t2 USING (foo)
JOIN t3 USING (bar)
JOIN t4
 ON t2.x = t4.y
----
SELECT a, b, c
  FROM t1
       JOIN t2 USING (foo)
       JOIN t3 USING (bar)
       JOIN t4 ON t2.x = t4.y
----

++++
multiple clause ON
----
SELECT a, b, c
FROM t1
JOIN t2 ON t1.x = t2.x AND t1.y = t2.y
----
SELECT a, b, c
  FROM t1
       JOIN t2 ON t1.x = t2.x
           AND t1.y = t2.y
----

++++
very long ON
----
SELECT a, b, c
FROM t1
JOIN t2 ON t1.x = t2.x AND t1.y = t2.y AND t1.z = t2.z AND t1.a = t2.a AND t1.b = t2.b AND t1.c = t2.c AND t1.d = t2.d
JOIN t3 USING (foo)
----
SELECT a, b, c
  FROM t1
       JOIN t2
           ON t1.x = t2.x
           AND t1.y = t2.y
           AND t1.z = t2.z
           AND t1.a = t2.a
           AND t1.b = t2.b
           AND t1.c = t2.c
           AND t1.d = t2.d
       JOIN t3 USING (foo)
----

++++
cross join
----
SELECT * FROM my_table AS a CROSS JOIN my_table AS b
----
SELECT *
  FROM my_table AS a CROSS JOIN my_table AS b
----

++++
all aliases
----
SELECT a, b, c
FROM table1 AS t1 LEFT OUTER JOIN table2 AS t2 USING (t1_id)
----
SELECT a, b, c
  FROM table1 AS t1 LEFT OUTER JOIN table2 AS t2 USING (t1_id)
----

++++
subselect
----
SELECT a, b, c
FROM ( SELECT x, y, z FROM t1 JOIN t2 USING (x)) AS sub
 JOIN t3 ON sub.foo = t3.foo
----
SELECT a, b, c
  FROM (
           SELECT x, y, z
             FROM t1 JOIN t2 USING (x)
       ) AS sub
       JOIN t3 ON sub.foo = t3.foo
----

++++
lateral subselect
----
SELECT a, b, c
FROM  t3 JOIN LATERAL ( SELECT x, y, z FROM t1 JOIN t2 USING (x)) AS sub
ON sub.foo = t3.foo
----
SELECT a, b, c
  FROM t3
       JOIN LATERAL (
           SELECT x, y, z
             FROM t1 JOIN t2 USING (x)
       ) AS sub
           ON sub.foo = t3.foo
----

++++
nested subselect
----
SELECT a, b, c
FROM (
         SELECT x, y, z
         FROM t1
              JOIN t2 USING (x)
     ) AS sub1
     JOIN (
         SELECT x, y, z
         FROM t3 JOIN ( SELECT x, y,z FROM t4 ) AS sub2a USING (x)
     ) AS sub2 ON sub1.z = sub2.z
----
SELECT a, b, c
  FROM (
           SELECT x, y, z
             FROM t1 JOIN t2 USING (x)
       ) AS sub1
       JOIN (
           SELECT x, y, z
             FROM t3
                  JOIN (
                      SELECT x, y, z
                        FROM t4
                  ) AS sub2a
                      USING (x)
       ) AS sub2
           ON sub1.z = sub2.z
----

++++
SELECT FROM func AS (cols)
----
SELECT * FROM distributors_2(111) AS (f1 int, f2 text)
----
SELECT *
  FROM distributors_2(111) AS ( f1 int, f2 text )
----

++++
SELECT FROM multiple ( func AS (cols) )
----
SELECT * FROM ROWS FROM ( distributors_2(111) AS ( f1 int, f2 text ), distributors_3(111) AS ( f1 int, f2 text ) )
----
SELECT *
  FROM ROWS FROM (
           distributors_2(111) AS ( f1 int, f2 text ),
           distributors_3(111) AS ( f1 int, f2 text )
       )
----

++++
SELECT FROM multiple ( func AS (cols) ) AS name
----
SELECT * FROM ROWS FROM ( distributors_2(111) AS ( f1 int, f2 text ), distributors_3(111) AS ( f1 int, f2 text ) ) AS d
----
SELECT *
  FROM ROWS FROM (
           distributors_2(111) AS ( f1 int, f2 text ),
           distributors_3(111) AS ( f1 int, f2 text )
       ) AS d
----

++++
SELECT FROM multiple ( func AS (cols) ) AS name (cols)
----
SELECT * FROM ROWS FROM ( distributors_2(111) AS ( f1 int, f2 text ), distributors_3(111) AS ( f1 int, f2 text ) ) AS d (d1 int, d2 text)
----
SELECT *
  FROM ROWS FROM (
           distributors_2(111) AS ( f1 int, f2 text ),
           distributors_3(111) AS ( f1 int, f2 text )
       ) AS d ( d1 int, d2 text )
----


++++
SELECT FROM multiple ( func AS (cols) ) AS name (cols) with long lines
----
SELECT * FROM ROWS FROM ( really_long_function_name_goes_here_and_it_keeps_going(123) AS ( really_long_column_name_goes_here1 int, really_long_column_name_goes_here1 text ), distributors_3(456) AS ( f1 int, f2 text ) ) AS d (very_long_column_name_goes_here_and_keeps_going_and_going1 int, very_long_column_name_goes_here_and_keeps_going_and_going text)
----
SELECT *
  FROM ROWS FROM (
           really_long_function_name_goes_here_and_it_keeps_going(123) AS (
               really_long_column_name_goes_here1 int,
               really_long_column_name_goes_here1 text
           ),
           distributors_3(456) AS ( f1 int, f2 text )
       ) AS d (
           very_long_column_name_goes_here_and_keeps_going_and_going1 int,
           very_long_column_name_goes_here_and_keeps_going_and_going text
       )
----

++++
lateral join func
----
SELECT m.name AS mname, pname
FROM manufacturers m, LATERAL get_product_names(m.id) pname
----
SELECT m.name AS mname, pname
  FROM manufacturers AS m,
       LATERAL get_product_names(m.id) AS pname
----

++++
lateral left outer join func
----
SELECT m.name AS mname, pname
FROM manufacturers m LEFT JOIN LATERAL get_product_names(m.id) pname ON true
----
SELECT m.name AS mname, pname
  FROM manufacturers AS m
       LEFT OUTER JOIN LATERAL get_product_names(m.id) AS pname
           ON TRUE
----


++++
tablesample BERNOULLI
----
SELECT id FROM x TABLESAMPLE BERNOULLI(42) JOIN y USING (x)
----
SELECT id
  FROM x TABLESAMPLE bernoulli(42)
       JOIN y USING (x)
----

++++
tablesample SYSTEM
----
SELECT id FROM x TABLESAMPLE SYSTEM(42) JOIN y USING (x)
----
SELECT id
  FROM x TABLESAMPLE system(42)
       JOIN y USING (x)
----

++++
tablesample REPEATABLE 1
----
SELECT id FROM x TABLESAMPLE SYSTEM(42) REPEATABLE (1) JOIN y USING (x)
----
SELECT id
  FROM x TABLESAMPLE system(42) REPEATABLE (1)
       JOIN y USING (x)
----
